// Code generated by goa v3.13.2, DO NOT EDIT.
//
// health views
//
// Command:
// $ goa gen syncer/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Health is the viewed result type that is projected based on a view.
type Health struct {
	// Type to project
	Projected *HealthView
	// View to render
	View string
}

// HealthView is a type that runs validations on a projected type.
type HealthView struct {
	Status *string
}

var (
	// HealthMap is a map indexing the attribute names of Health by view name.
	HealthMap = map[string][]string{
		"default": {
			"status",
		},
	}
)

// ValidateHealth runs the validations defined on the viewed result type Health.
func ValidateHealth(result *Health) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateHealthView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateHealthView runs the validations defined on HealthView using the
// "default" view.
func ValidateHealthView(result *HealthView) (err error) {

	return
}
