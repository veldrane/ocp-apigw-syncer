// Code generated by goa v3.13.2, DO NOT EDIT.
//
// checker views
//
// Command:
// $ goa gen syncer/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// Sync is the viewed result type that is projected based on a view.
type Sync struct {
	// Type to project
	Projected *SyncView
	// View to render
	View string
}

// SyncView is a type that runs validations on a projected type.
type SyncView struct {
	Status *string
}

var (
	// SyncMap is a map indexing the attribute names of Sync by view name.
	SyncMap = map[string][]string{
		"default": {
			"status",
		},
	}
)

// ValidateSync runs the validations defined on the viewed result type Sync.
func ValidateSync(result *Sync) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateSyncView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateSyncView runs the validations defined on SyncView using the
// "default" view.
func ValidateSyncView(result *SyncView) (err error) {

	return
}
